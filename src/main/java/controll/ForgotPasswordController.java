package controll;

import dao.MySQLConnection;
import jakarta.servlet.http.HttpServlet;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.UUID;
import jakarta.mail.*;
import jakarta.mail.internet.*;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.util.Properties;

@WebServlet("/forgotpassword")
public class ForgotPasswordController extends HttpServlet {
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        request.getRequestDispatcher("doanweb/html/forgotpassword.jsp").forward(request, response);
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String email = request.getParameter("email");
        System.out.println("Email nh·∫≠n ƒë∆∞·ª£c: " + email);


        try (Connection conn = MySQLConnection.getConnection()) {
            if (conn == null) {
                System.out.println("‚ùå L·ªñI: Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn MySQL!");
                request.setAttribute("error", "L·ªói h·ªá th·ªëng! Vui l√≤ng th·ª≠ l·∫°i sau.");
                request.getRequestDispatcher("doanweb/html/forgotpassword.jsp").forward(request, response);
                return;
            }
            PreparedStatement stmt = conn.prepareStatement("SELECT * FROM user WHERE email = ?");
            stmt.setString(1, email);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                System.out.println("‚úÖ Email t·ªìn t·∫°i trong database!");

                // T·∫°o token ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
                String token = UUID.randomUUID().toString();
                System.out.println("üìå Token m·ªõi t·∫°o: " + token);
                PreparedStatement updateStmt = conn.prepareStatement("UPDATE user SET reset_token = ? WHERE email = ?");
                updateStmt.setString(1, token);
                updateStmt.setString(2, email);
                int rowsUpdated = updateStmt.executeUpdate();
                System.out.println("‚úÖ Token c·∫≠p nh·∫≠t th√†nh c√¥ng, s·ªë d√≤ng ·∫£nh h∆∞·ªüng: " + rowsUpdated);

                // G·ª≠i email ch·ª©a li√™n k·∫øt ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
                boolean emailSent = sendResetEmail(email, token);
                if (emailSent) {
                    System.out.println("üì© Email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng ƒë·∫øn: " + email);
                    request.setAttribute("message", "Email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c g·ª≠i!");
                }else {
                    System.out.println("‚ùå Kh√¥ng th·ªÉ g·ª≠i email.");
                    request.setAttribute("error", "Kh√¥ng th·ªÉ g·ª≠i email. Vui l√≤ng th·ª≠ l·∫°i.");
                }
            } else {
                System.out.println("‚ùå Email kh√¥ng t·ªìn t·∫°i trong database!");
                request.setAttribute("error", "Email kh√¥ng t·ªìn t·∫°i!");
            }
        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("error", "L·ªói h·ªá th·ªëng! Vui l√≤ng th·ª≠ l·∫°i sau.");
        }
        request.getRequestDispatcher("doanweb/html/forgotpassword.jsp").forward(request, response);
    }

    private boolean sendResetEmail(String email, String token) throws UnsupportedEncodingException {
        String encodedToken = URLEncoder.encode(token, "UTF-8");
        String resetLink = "http://localhost:8080/doanweb/html/resetpassword.jsp?token=" + encodedToken;

        String host = "smtp.gmail.com";
        String from = "phamthaibao57@gmail.com";
        String password = "ektk qrsq oaky tgib";

        Properties properties = new Properties();
        properties.put("mail.smtp.auth", "true");
        properties.put("mail.smtp.starttls.enable", "true");
        properties.put("mail.smtp.host", host);
        properties.put("mail.smtp.port", "587");

        Session session = Session.getInstance(properties, new Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(from, password);
            }
        });

        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(from));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(email));
            message.setSubject("ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u");
            message.setText("Nh·∫•n v√†o li√™n k·∫øt sau ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u: " + resetLink);
            Transport.send(message);

            System.out.println("‚úÖ Email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c g·ª≠i!");
            return true;
        } catch (MessagingException e) {
            e.printStackTrace();
            System.out.println("‚ùå L·ªñI: Kh√¥ng th·ªÉ g·ª≠i email!");
            return false;

        }
    }
}