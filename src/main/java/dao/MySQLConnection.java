package dao;

import com.zaxxer.hikari.HikariConfig;
import com.zaxxer.hikari.HikariDataSource;

import java.sql.Connection;
import java.sql.SQLException;

public class MySQLConnection {
    private static final String URL = "jdbc:mysql://localhost:3306/ecommerce_db"; // Thay b·∫±ng t√™n database c·ªßa b·∫°n
    private static final String USER = "root"; // Thay b·∫±ng username MySQL c·ªßa b·∫°n
    private static final String PASSWORD = "12345"; // Thay b·∫±ng m·∫≠t kh·∫©u MySQL c·ªßa b·∫°n

    private static HikariDataSource dataSource;

    static {
        try {
            HikariConfig config = new HikariConfig();
            config.setJdbcUrl(URL);
            config.setUsername(USER);
            config.setPassword(PASSWORD);
            config.setDriverClassName("com.mysql.cj.jdbc.Driver");

            // C·∫•u h√¨nh hi·ªáu su·∫•t
            config.setMaximumPoolSize(10);
            config.setMinimumIdle(5);
            config.setIdleTimeout(30000);
            config.setMaxLifetime(600000);
            config.setConnectionTimeout(20000); // Timeout khi l·∫•y k·∫øt n·ªëi

            // T·∫°o ngu·ªìn k·∫øt n·ªëi HikariCP
            dataSource = new HikariDataSource(config);
            System.out.println("‚úÖ K·∫øt n·ªëi MySQL ƒë∆∞·ª£c thi·∫øt l·∫≠p th√†nh c√¥ng!");
        } catch (Exception e) {
            System.err.println("‚ùå L·ªói khi thi·∫øt l·∫≠p k·∫øt n·ªëi MySQL: " + e.getMessage());
            e.printStackTrace();
        }
    }

    // L·∫•y k·∫øt n·ªëi t·ª´ connection pool
    public static Connection getConnection() throws SQLException {
        try {
            Connection connection = dataSource.getConnection();
            System.out.println("üîó K·∫øt n·ªëi MySQL ƒë∆∞·ª£c l·∫•y th√†nh c√¥ng!");
            return connection;
        } catch (SQLException e) {
            System.err.println("‚ùå L·ªói l·∫•y k·∫øt n·ªëi t·ª´ MySQL: " + e.getMessage());
            throw e;
        }
    }

    // Ki·ªÉm tra k·∫øt n·ªëi c√≥ kh·∫£ d·ª•ng kh√¥ng
    public static boolean isDatabaseConnected() {
        try (Connection conn = getConnection()) {
            return conn != null && !conn.isClosed();
        } catch (SQLException e) {
            System.err.println("‚ö†Ô∏è Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn MySQL: " + e.getMessage());
            return false;
        }
    }

    // ƒê√≥ng connection pool khi kh√¥ng c√≤n s·ª≠ d·ª•ng
    public static void shutdown() {
        if (dataSource != null) {
            dataSource.close();
            System.out.println("üîå ƒê√£ ƒë√≥ng k·∫øt n·ªëi MySQL.");
        }
    }
}
